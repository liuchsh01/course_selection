<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.course.selection.dao.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.course.selection.entity.Course" >
    <id column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="college_id" property="collegeId" jdbcType="INTEGER" />
    <result column="course_code" property="courseCode" jdbcType="INTEGER" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="major_chooser" property="majorChooser" jdbcType="VARCHAR" />
    <result column="teacher" property="teacher" jdbcType="VARCHAR" />
    <result column="credit" property="credit" jdbcType="VARCHAR" />
    <result column="evaluation_mode" property="evaluationMode" jdbcType="INTEGER" />
    <result column="major_num" property="majorNum" jdbcType="INTEGER" />
    <result column="minor_num" property="minorNum" jdbcType="INTEGER" />
    <result column="credit_type" property="creditType" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="compulsory_elective" property="compulsoryElective" jdbcType="INTEGER" />
  </resultMap>
  <sql id="_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By__Where_Clause" >
    <where >
      <foreach collection=".oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    course_id, college_id, course_code, course_name, major_chooser, teacher, credit, 
    evaluation_mode, major_num, minor_num, credit_type, comment, compulsory_elective
  </sql>
  <select id="selectBy" resultMap="BaseResultMap" parameterType="com.course.selection.entity.Course" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null" >
      <include refid="_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBy" parameterType="com.course.selection.entity.Course" >
    delete from course
    <if test="_parameter != null" >
      <include refid="_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.course.selection.entity.Course" >
    insert into course (course_id, college_id, course_code, 
      course_name, major_chooser, teacher, 
      credit, evaluation_mode, major_num, 
      minor_num, credit_type, comment, 
      compulsory_elective)
    values (#{courseId,jdbcType=INTEGER}, #{collegeId,jdbcType=INTEGER}, #{courseCode,jdbcType=INTEGER}, 
      #{courseName,jdbcType=VARCHAR}, #{majorChooser,jdbcType=VARCHAR}, #{teacher,jdbcType=VARCHAR}, 
      #{credit,jdbcType=VARCHAR}, #{evaluationMode,jdbcType=INTEGER}, #{majorNum,jdbcType=INTEGER}, 
      #{minorNum,jdbcType=INTEGER}, #{creditType,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, 
      #{compulsoryElective,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.course.selection.entity.Course" >
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="collegeId != null" >
        college_id,
      </if>
      <if test="courseCode != null" >
        course_code,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="majorChooser != null" >
        major_chooser,
      </if>
      <if test="teacher != null" >
        teacher,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="evaluationMode != null" >
        evaluation_mode,
      </if>
      <if test="majorNum != null" >
        major_num,
      </if>
      <if test="minorNum != null" >
        minor_num,
      </if>
      <if test="creditType != null" >
        credit_type,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="compulsoryElective != null" >
        compulsory_elective,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null" >
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="courseCode != null" >
        #{courseCode,jdbcType=INTEGER},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="majorChooser != null" >
        #{majorChooser,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null" >
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=VARCHAR},
      </if>
      <if test="evaluationMode != null" >
        #{evaluationMode,jdbcType=INTEGER},
      </if>
      <if test="majorNum != null" >
        #{majorNum,jdbcType=INTEGER},
      </if>
      <if test="minorNum != null" >
        #{minorNum,jdbcType=INTEGER},
      </if>
      <if test="creditType != null" >
        #{creditType,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="compulsoryElective != null" >
        #{compulsoryElective,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countBy" parameterType="com.course.selection.entity.Course" resultType="java.lang.Integer" >
    select count(*) from course
    <if test="_parameter != null" >
      <include refid="_Where_Clause" />
    </if>
  </select>
  <update id="updateBySelective" parameterType="map" >
    update course
    <set >
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.collegeId != null" >
        college_id = #{record.collegeId,jdbcType=INTEGER},
      </if>
      <if test="record.courseCode != null" >
        course_code = #{record.courseCode,jdbcType=INTEGER},
      </if>
      <if test="record.courseName != null" >
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.majorChooser != null" >
        major_chooser = #{record.majorChooser,jdbcType=VARCHAR},
      </if>
      <if test="record.teacher != null" >
        teacher = #{record.teacher,jdbcType=VARCHAR},
      </if>
      <if test="record.credit != null" >
        credit = #{record.credit,jdbcType=VARCHAR},
      </if>
      <if test="record.evaluationMode != null" >
        evaluation_mode = #{record.evaluationMode,jdbcType=INTEGER},
      </if>
      <if test="record.majorNum != null" >
        major_num = #{record.majorNum,jdbcType=INTEGER},
      </if>
      <if test="record.minorNum != null" >
        minor_num = #{record.minorNum,jdbcType=INTEGER},
      </if>
      <if test="record.creditType != null" >
        credit_type = #{record.creditType,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.compulsoryElective != null" >
        compulsory_elective = #{record.compulsoryElective,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By__Where_Clause" />
    </if>
  </update>
  <update id="updateBy" parameterType="map" >
    update course
    set course_id = #{record.courseId,jdbcType=INTEGER},
      college_id = #{record.collegeId,jdbcType=INTEGER},
      course_code = #{record.courseCode,jdbcType=INTEGER},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      major_chooser = #{record.majorChooser,jdbcType=VARCHAR},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      credit = #{record.credit,jdbcType=VARCHAR},
      evaluation_mode = #{record.evaluationMode,jdbcType=INTEGER},
      major_num = #{record.majorNum,jdbcType=INTEGER},
      minor_num = #{record.minorNum,jdbcType=INTEGER},
      credit_type = #{record.creditType,jdbcType=INTEGER},
      comment = #{record.comment,jdbcType=VARCHAR},
      compulsory_elective = #{record.compulsoryElective,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By__Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.course.selection.entity.Course" >
    update course
    <set >
      <if test="collegeId != null" >
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="courseCode != null" >
        course_code = #{courseCode,jdbcType=INTEGER},
      </if>
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="majorChooser != null" >
        major_chooser = #{majorChooser,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null" >
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=VARCHAR},
      </if>
      <if test="evaluationMode != null" >
        evaluation_mode = #{evaluationMode,jdbcType=INTEGER},
      </if>
      <if test="majorNum != null" >
        major_num = #{majorNum,jdbcType=INTEGER},
      </if>
      <if test="minorNum != null" >
        minor_num = #{minorNum,jdbcType=INTEGER},
      </if>
      <if test="creditType != null" >
        credit_type = #{creditType,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="compulsoryElective != null" >
        compulsory_elective = #{compulsoryElective,jdbcType=INTEGER},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.course.selection.entity.Course" >
    update course
    set college_id = #{collegeId,jdbcType=INTEGER},
      course_code = #{courseCode,jdbcType=INTEGER},
      course_name = #{courseName,jdbcType=VARCHAR},
      major_chooser = #{majorChooser,jdbcType=VARCHAR},
      teacher = #{teacher,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=VARCHAR},
      evaluation_mode = #{evaluationMode,jdbcType=INTEGER},
      major_num = #{majorNum,jdbcType=INTEGER},
      minor_num = #{minorNum,jdbcType=INTEGER},
      credit_type = #{creditType,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      compulsory_elective = #{compulsoryElective,jdbcType=INTEGER}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
</mapper>